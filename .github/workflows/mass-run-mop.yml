name: Run Scripts on Multiple Repositories

on:
  workflow_dispatch:
    inputs:
      google_sheet_id:
        description: 'ID of the Google Sheet containing repository links'
        required: true

jobs:
  fetch_data:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Fetch Repository Links
        id: fetch-repos
        uses: jroehl/gsheet.action@v2.0.0
        with:
          spreadsheetId: ${{ github.event.inputs.google_sheet_id }}
          commands: |
            [
              { "command": "getData", "args": { "range": "links!A2:A" }}
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}

      - name: Set up matrix for job
        id: set-matrix
        run: |
          # Base64 encode the results to avoid shell parsing issues
          ENCODED_RESULTS=$(echo '${{ steps.fetch-repos.outputs.results }}' | base64)
          # Decode and parse using jq
          JSON_STRING=$(echo "$ENCODED_RESULTS" | base64 --decode | jq -c '[.results[].result.rawData[][]]')
          echo "Extracted JSON String:"
          echo "$JSON_STRING"
          echo "::set-output name=matrix::$JSON_STRING"

  run_jobs:
    needs: fetch_data
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo: ${{ fromJson(needs.fetch_data.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Prepare Working Directory
      run: |
          mkdir ./projects
          cd ./projects


    - name: clone SoftEngResearch/mop-with-dynapt
      run: |
        cd ./projects
        git clone https://${{ secrets.GH_ACCESS_TOKEN }}@github.com/SoftEngResearch/mop-with-dynapt.git

    - name: Create projects directory and copy scripts from ../scripts there
      run: |
        cd ./projects
        cp ../scripts/* .
        ls -l

    - name: Install Dependencies and Run MOP
      run: |
        echo "================== Installing Dependencies =================="
        cd ./projects
        chmod +x install.sh
        install.sh ${{ matrix.repo }}

        echo "================== Running MOP =================="
        REPO_URL="${{ matrix.repo }}"
        REPO_NAME="${REPO_URL##*/}"  # This strips everything before the last '/' character
        echo "Repository Name: $REPO_NAME"
        chmod +x run-mop-new.sh
        run-mop-new.sh ./$REPO_NAME
